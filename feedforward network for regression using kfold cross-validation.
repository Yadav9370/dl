#pip install keras scikit-learn numpy

from keras.models import Sequential
from keras.layers import Dense
from sklearn.model_selection import KFold
from sklearn.metrics import mean_squared_error
import numpy as np
from sklearn.datasets import make_regression
# Generate synthetic regression data
X, y = make_regression(n_samples=1000, n_features=20, noise=0.1)
# Define the feedforward network
model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X.shape[1],)))  # input shape matches the number of features
model.add(Dense(32, activation='relu'))
model.add(Dense(1))
model.compile(loss='mean_squared_error', optimizer='adam')
# Define k-fold cross-validation
kfold = KFold(n_splits=5, shuffle=True, random_state=42)
# Evaluate the model
mse_values = []
for train_index, val_index in kfold.split(X):
    X_train, X_val = X[train_index], X[val_index]
    y_train, y_val = y[train_index], y[val_index]
    model.fit(X_train, y_train, epochs=100, batch_size=32, verbose=0)
    y_pred = model.predict(X_val)
    mse = mean_squared_error(y_val, y_pred)
    mse_values.append(mse)
print('Average MSE:', np.mean(mse_values))
print('Standard Deviation of MSE:', np.std(mse_values))
